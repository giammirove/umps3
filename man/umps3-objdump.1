.\" Copyright (C) 2020 Mattia Biondi, Mikey Goldweber, Renzo Davoli
.\"
.\" This is free documentation; you can redistribute it and/or
.\" modify it under the terms of the GNU General Public License,
.\" as published by the Free Software Foundation, either version 3
.\" of the License, or (at your option) any later version.
.\"
.\" The GNU General Public License's references to "object code"
.\" and "executables" are to be interpreted as the output of any
.\" document formatting or typesetting system, including
.\" intermediate and printed output.
.\"
.\" This manual is distributed in the hope that it will be useful,
.\" but WITHOUT ANY WARRANTY; without even the implied warranty of
.\" MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.\" GNU General Public License for more details.
.\"
.\" You should have received a copy of the GNU General Public
.\" License along with this manual; if not, write to the Free
.\" Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston,
.\" MA 02110-1301 USA.
.\"
.\" Automatically generated by Pandoc 2.17.1.1
.\"
.\" Define V font for inline verbatim, using C font in formats
.\" that render this, and otherwise B font.
.ie "\f[CB]x\f[]"x" \{\
. ftr V B
. ftr VI BI
. ftr VB B
. ftr VBI BI
.\}
.el \{\
. ftr V CR
. ftr VI CI
. ftr VB CB
. ftr VBI CBI
.\}
.TH "UMPS3-OBJDUMP" "1" "December 2022" "" "General Commands Manual"
.hy
.SH NAME
.PP
\f[V]umps3-objdump\f[R] \[en] The umps3-objdump object file analysis
utility
.SH SYNOPSIS
.PP
\f[V]umps3-objdump\f[R] [\f[I]OPTIONS\f[R]] \f[I]FILE\f[R]
.SH DESCRIPTION
.PP
The command-line \f[V]umps3-objdump\f[R] utility is used to analyze
object files created by the \f[V]umps3-elf2umps\f[R] utility.
.PP
This utility performs the same functions as
\f[V]mipsel-linux-gnu-objdump\f[R] (or \f[V]mips-linux-gnu-objdump\f[R])
which is included in the cross-platform development tool set.
.PP
\f[V]umps3-objdump\f[R] is used to analyze \f[V].core\f[R],
\f[V].rom\f[R], and \f[V].aout\f[R] object files while
\f[V]mipsel-linux-gnu-objdump\f[R] is used to analyze ELF-formatted
object files.
.PP
The output from \f[V]umps3-objdump\f[R] is directed to stdout.
.SH OPTIONS
.TP
\f[V]-h\f[R]
Optional flag to show the \f[V].aout\f[R] program header, if present.
.TP
\f[V]-d\f[R]
Optional flag to \[lq]disassemble\[rq] and display the \f[V].text\f[R]
area in \f[I]FILE\f[R].
.PD 0
.P
.PD
.TP
\f[V]\f[R]
This is an \[lq]assembly\[rq] dump of the code, thus it will contain
load and branch delay slots; differing from the machine language version
of the same code.
.TP
\f[V]-x\f[R]
Optional flag to produce a complete little-endian format hexadecimal
word dump of \f[I]FILE\f[R].
.PD 0
.P
.PD
.TP
\f[V]\f[R]
Zero-filled blocks will be skipped and marked with *asterisks*.
.PD 0
.P
.PD
.TP
\f[V]\f[R]
The output will appear identical regardless of whether \f[I]FILE\f[R] is
little-endian or big-endian.
.TP
\f[V]-b\f[R]
Optional flag to produce a complete byte dump of \f[I]FILE\f[R].
.PD 0
.P
.PD
.TP
\f[V]\f[R]
Zero-filled blocks will be skipped and marked with *asterisks*.
.PD 0
.P
.PD
.TP
\f[V]\f[R]
Unlike with the \f[I]-x\f[R] flag, the endian-format of the output will
depend on the endianness of \f[I]FILE\f[R]; i.e.\ if \f[I]FILE\f[R] is
big-endian than the output will be big-endian.
.TP
\f[V]-a\f[R]
Flag to perform all of the above optional operations.
.SH FILES
.PP
\f[I]FILE\f[R] is the \f[V].core\f[R], \f[V].rom\f[R], or
\f[V].aout\f[R] object file to be analyzed.
.SH AUTHOR
.PP
Mauro Morsiani
.PD 0
.P
.PD
Contributors can be listed on GitHub.
.SH BUGS
.PP
Report issues on GitHub:
\f[I]https://github.com/virtualsquare/umps3\f[R]
.SH SEE ALSO
.PP
\f[B]umps3\f[R](1), \f[B]umps3-elf2umps\f[R](1),
\f[B]umps3-mkdev\f[R](1)
.PP
Full documentation at: \f[I]https://github.com/virtualsquare/umps3\f[R]
.PD 0
.P
.PD
Project wiki: \f[I]https://wiki.virtualsquare.org/#!umps/umps.md\f[R]
.SH COPYRIGHT
.PP
2004, Mauro Morsiani
.PD 0
.P
.PD
